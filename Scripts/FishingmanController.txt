local b = book.GetComponent("BookController")
local weather = book.GetComponent("WeatherController")

local commandNames = {}
commandNames["page0"]= 0
commandNames["page1"]= 7
commandNames["page2"]= 16
commandNames["page3"]= 25
commandNames["page4"]= 33
commandNames["page5"]= 41
commandNames["page6"]= 49
commandNames["page7"]= 57
commandNames["page8"]= 65
commandNames["page9"]= 74
commandNames["page10"]= 83

function nextPage()
	local res = b.swipeLeftHandle()

	if (res == true) then
		local curPageNumber = b.getCurrentPageNumber()
		local commandIndex = 0

		local command = string.format("page%d", curPageNumber)
		print("nextPage");
		print(command);
		commandIndex = commandNames[command]
		print("commandIndex")
		print(commandIndex)
		local block = flowchart.FindBlock("Start")

		--block.JumpToCommandIndex = commandIndex
		--block.Execute()

		if (block.State == 1) then
			print("Block is still available")
			block.JumpToCommandIndex = commandIndex
			block.Execute()

		else
			print("Block is not available")
			runblock(flowchart, "Start", commandIndex, true)
		end

	end
end


function backPage()
	local res = b.swipeRightHandle()

	if (res == true) then
		local curPageNumber = b.getCurrentPageNumber()
		local commandIndex = 0

		local command = string.format("page%d", curPageNumber)
		print("backPage")
		print(command)
		commandIndex = commandNames[command]
		print("commandIndex")
		print(commandIndex)
		local block = flowchart.FindBlock("Start")
--		block.JumpToCommandIndex = commandIndex
--		block.Execute()

		if (block.State == 1) then
			print("Block is still available")
			block.JumpToCommandIndex = commandIndex
			block.Execute()

		else
			print("Block is not available")
			runblock(flowchart, "Start", commandIndex, true)
		end

	end
end

function resetAnimationFlag()
	b.resetAnimationFlag()
end

function fishDiving()
	local clip = "CloseLeftItemsPage"
	b.playAnimationNextPage(clip)
end

function invokeLightningStrikeInCoInSuccession()
	print("invokeLightning")
	weather.InvokeLightningStrikeInCoInSuccession()
end

function weatherForPage(page)
		weather.transitionDurationChanged(4)
		weather.invokeCloud(false)
		--house (lodge)
		if (page == 1) then
			weather.invokeWind(false)
			weather.invokeRainByLevel(false, 0)

		--ocean
		elseif page == 2 then
			weather.invokeWind(true)
			weather.invokeRainByLevel(false, 0)

		--house (lodge)
		elseif page == 3 then
			weather.invokeWind(false)
			weather.invokeRainByLevel(false, 0)

		--ocean
		elseif page == 4 then
			weather.invokeWind(true)
			weather.invokeRainByLevel(false, 0)

		--house	(building)
		elseif page == 5 then
			weather.invokeWind(false)
			weather.invokeRainByLevel(false, 0)

		--ocean
		elseif page == 6 then
			weather.invokeWind(true)
			weather.invokeRainByLevel(true, 2)

		--house (castle)
		elseif page == 7 then
			weather.invokeWind(false)
			weather.invokeRainByLevel(true, 1)

		--ocean
		elseif page == 8 then
			weather.invokeWind(true)
			weather.invokeRainByLevel(true, 4)
			weather.invokeCloud(true)
			weather.InvokeLightningStrikeInCoInSuccession()

		--house (lodge)
		elseif page == 9 then
			weather.invokeWind(false)
			weather.invokeCloud(true)
			weather.invokeRainByLevel(true, 2)

		--finish
		elseif page == 10 then
			weather.invokeWind(false)
			weather.invokeRainByLevel(false, 0)

		else
			weather.invokeWind(false)
			weather.invokeRainByLevel(false, 0)
		end

end
